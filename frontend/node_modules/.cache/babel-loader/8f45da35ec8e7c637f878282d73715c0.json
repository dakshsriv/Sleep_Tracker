{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Sleep-tracker/frontend/src/components/EntryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Entry from './Entry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EntryList(props) {\n  _s();\n\n  const [entries, setEntries] = useState([]);\n  const [requested, setRequested] = useState(false);\n\n  const prepareSendCreate = () => {\n    console.log(\"Clicked\");\n    return props.sendCreate();\n  };\n\n  useEffect(() => {\n    if (requested === false) {\n      axios({\n        method: 'get',\n        url: 'http://127.0.0.1:8000/api/'\n      }).then(response => {\n        setEntries(response.data);\n        setRequested(true);\n      });\n    }\n  });\n  console.log(\"Entries is: \", entries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entryListBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createBox\",\n        onClick: () => prepareSendCreate(),\n        children: \"Create a new entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), entries.map(entry => {\n        return /*#__PURE__*/_jsxDEV(Entry, {\n          id: entry._id,\n          updateCallBack: props.sendUpdate,\n          entry: entry\n        }, entry._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(EntryList, \"n4J5K67XLB6kd5dPfybetdGUJws=\");\n\n_c = EntryList;\nexport default EntryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryList\");","map":{"version":3,"sources":["/home/daksh/Projects/Sleep-tracker/frontend/src/components/EntryList.js"],"names":["React","useState","useEffect","axios","Entry","EntryList","props","entries","setEntries","requested","setRequested","prepareSendCreate","console","log","sendCreate","method","url","then","response","data","map","entry","_id","sendUpdate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAOP,KAAK,CAACQ,UAAN,EAAP;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAS,KAAK,KAAlB,EAAyB;AACzBN,MAAAA,KAAK,CAAC;AACJY,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE;AAFD,OAAD,CAAL,CAICC,IAJD,CAIMC,QAAQ,IAAI;AACdV,QAAAA,UAAU,CAACU,QAAQ,CAACC,IAAV,CAAV;AACAT,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAPH;AAOM;AACP,GAVQ,CAAT;AAYAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,OAA5B;AAEA,sBACA;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAMI,iBAAiB,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECJ,OAAO,CAACa,GAAR,CAAaC,KAAD,IAAW;AAAC,4BAAO,QAAC,KAAD;AAAuB,UAAA,EAAE,EAAEA,KAAK,CAACC,GAAjC;AAAsC,UAAA,cAAc,EAAEhB,KAAK,CAACiB,UAA5D;AAAwE,UAAA,KAAK,EAAEF;AAA/E,WAAYA,KAAK,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAgG,OAAxH,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAOD;;GA9BQjB,S;;KAAAA,S;AAgCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Entry from './Entry';\n\nfunction EntryList(props) {\n  const [entries, setEntries] = useState([]);\n  const [requested, setRequested] = useState(false);\n  \n  const prepareSendCreate = () => {\n    console.log(\"Clicked\")\n    return props.sendCreate()\n  }\n\n  useEffect(() => {\n    if (requested === false) {\n    axios({\n      method: 'get',\n      url: 'http://127.0.0.1:8000/api/'\n    })\n    .then(response => {\n        setEntries(response.data);\n        setRequested(true);\n      }) }\n  })\n\n  console.log(\"Entries is: \", entries)\n  \n  return(\n  <div>\n    <div className=\"entryListBox\">\n    <button className=\"createBox\" onClick={() => prepareSendCreate()} >Create a new entry</button>\n    {entries.map((entry) => {return <Entry key={entry._id} id={entry._id} updateCallBack={props.sendUpdate} entry={entry} />})}</div>\n    \n  </div>)\n}\n\nexport default EntryList"]},"metadata":{},"sourceType":"module"}